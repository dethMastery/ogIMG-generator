// Module Call
let canvas = require('canvas')
const { measureText } = canvas;
let Konva = require('konva/cmj').default

// Static Variable
let w = 1280
let h = 720

async function canvasBoard(req, res) {
  let headText = 'some.domain.tld'
  let subText = 'just a site description'
  let footText = 'generated by dethMastery/ogIMG-generator'

  // Setting up stage
  const stage = new Konva.Stage({
    container: undefined,
    width: w,
    height: h,
  });

  // Base Layer
  let base = new Konva.Layer()
  let baseBG = new Konva.Rect({
    x: 0,
    y: 0,
    width: w,
    height: h,
    fill: '#2e2f2f'
  })
  base.add(baseBG)

  // Text
  let text = new Konva.Layer()
  let callHeadText = new Konva.Text({
    x: 0,
    y: (h/2) - (75 + 10),
    width: w,
    align: 'center',
    wrap: 'word',
    text: headText,
    fontSize: 75,
    fontFamily: 'Calibri',
    fill: 'whitesmoke',
  })
  let callSubText = new Konva.Text({
    x: 0,
    y: (h/2) + (20 + 10),
    width: w,
    align: 'center',
    wrap: 'word',
    text: subText,
    fontSize: 30,
    fontFamily: 'Calibri',
    fill: 'whitesmoke',
  })
  let callFooter = new Konva.Text({
    x: 0,
    y: (h) - (20 + 20),
    width: w - 20,
    lineHeight: 1.5,
    align: 'right',
    wrap: 'word',
    text: footText,
    fontSize: 20,
    fontFamily: 'Calibri',
    fill: 'whitesmoke',
  })
  text.add(callHeadText)
  text.add(callSubText)
  text.add(callFooter)
  
  // some line
  let rect = new Konva.Layer()
  let centerLine = new Konva.Rect({
    x: 300,
    y: (h/2),
    width: w - (300 + 300),
    height: 2.5,
    fill: 'whitesmoke'
  })
  rect.add(centerLine)

  // Stage Set up
  stage.add(base)
  stage.add(rect)
  stage.add(text)

  stage.draw()

  // Set IMG Buffer
  var img = Buffer.from(stage.toDataURL().slice(22), 'base64');

  // Destroy stage (Avoid RAM Leak)
  base.destroy()
  stage.destroy()

  // Sending to show
  res.setHeader('content-type', "image/png")
  res.send(img)
}

module.exports = {
  canvasBoard
}